<nav>
    <span class="nav-header">Service</span>
</nav>

<aside class="left-aside">
    <ul>
        <li>
            <button type="button" class="aside-button" id="allOrdersButton">Orders</button>
        </li>
        <li>
            <button type="button" class="aside-button" id="serviceRequestsButton">Service Requests</button>
        </li>
        <li>
            <button type="button" class="aside-button" id="completedOrdersButton">Completed</button>
        </li>
    </ul>
</aside>

<main>
    <section class="allOrders">
        <table>
            <thead>
                <tr>
                    <th>TIME</th>
                    <th>CUSTOMER</th>
                    <th>ITEM</th>
                    <th>RESTRICTIONS</th>
                    <th></th>
                </tr>
            </thead>
            <tbody class="allOrdersBody">
                <% orders.filter((order) => { return order.completed === false}).forEach((order) => { %>
                    <tr>
                        <td>
                            <%= formatDate(order.orderedAt)[1] %>
                        </td>
                        <td>
                            <%= order.customer.name %>
                        </td>
                        <td>
                            <%= order.menuItem.name %>
                        </td>
                        <td>
                            <%= order.customer.restrictions %>
                        </td>
                        <td>
                            <button type="button" class="done-button" value="<%- order.id %>">Done</button>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </section>

    <section class="serviceRequests">
        <table>
            <thead>
                <tr>
                    <th>TIME</th>
                    <th>CUSTOMER</th>
                    <th>REQUEST</th>
                    <th></th>
                </tr>
            </thead>
            <tbody class="serviceRequestsBody"></tbody>
        </table>
    </section>

    <section class="completedOrders">
        <table>
            <thead>
                <tr>
                    <th>TIME</th>
                    <th>CUSTOMER</th>
                    <th>ITEM</th>
                    <th>RESTRICTIONS</th>
                </tr>
            </thead>
            <tbody class="completedOrdersBody">
                <% orders.filter((order) => { return order.completed === true}).filter((order) => { var d = new Date; d.setDate(d.getDate() - 1); return order.orderedAt > d}).sort((a,b) => {return b.completedAt - a.completedAt}).forEach((order) => { %>
                    <tr>
                        <td>
                            <% var completedDate = order.completedAt ? formatDate(order.completedAt)[1] : "" %>
                            <%= completedDate %>
                        </td>
                        <td>
                            <%= order.customer.name %>
                        </td>
                        <td>
                            <%= order.menuItem.name %>
                        </td>
                        <td>
                            <%= order.customer.restrictions %>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </section>
</main>

<script src="/socket.io/socket.io.js"></script>
<script>
    // connect to the business' room
    var socket = io.connect()
    var room = "<%= chat %>"
    socket.on('connect', function() {
        socket.emit('join', room)
        console.log('joining ' + room)
    })
    // add the new menu order to the orders section
    socket.on('order', function(data) {
        console.log('receiving new order')
        var newRow = document.createElement('tr')
        newRow.innerHTML = "<td>" + data.date + "</td><td>" + data.customer + "</td><td>" + data.menuItem + "</td><td>" + data.restrictions + "</td><td><button type='button' class='done-button' value=" + data.orderId + ">DONE</button></td>"
        document.querySelector('.allOrdersBody').appendChild(newRow)
    })
    // add the new service order to the service section
    socket.on('serviceRequest', function(data) {
        console.log('receiving new service request')
        var newRow = document.createElement('tr')
        newRow.innerHTML = "<td>" + data.date + "</td><td>" + data.customer + "</td><td>" + data.serviceItem + "</td><td><button type='button' class='done-button'>DONE</button></td>"
        document.querySelector('.serviceRequestsBody').appendChild(newRow)
    })
    // move the completed order to the completed orders table and change the status of the order to completed
    document.querySelector('.allOrders').addEventListener('click', function(event) {
        function send(orderId) {
            console.log('submitting remove order')
            socket.emit('remove', orderId)
        }
        var clickedElement = event.target
        if (clickedElement.className === 'done-button') {
            var orderId = clickedElement.value
            // remove the DONE button before moving it to completed
            var tr = clickedElement.parentNode.parentNode
            clickedElement.parentNode.parentNode.removeChild(clickedElement.parentNode)
            // change completed date !!!!
            var completedOrders = document.querySelector('.completedOrdersBody')
            completedOrders.insertBefore(tr, completedOrders.childNodes[2])
            send(orderId)
        }
    })
    // remove the completed service order
    document.querySelector('.serviceRequests').addEventListener('click', function(event) {
        var clickedElement = event.target
        if (clickedElement.className === 'done-button') {
            clickedElement.parentNode.parentNode.parentNode.removeChild(clickedElement.parentNode.parentNode)
        }
    })

    // show and hide the sections
    var buttons = [document.getElementById('allOrdersButton'), document.getElementById('serviceRequestsButton'), document.getElementById('completedOrdersButton')]
    var sections = [document.querySelector('.allOrders'), document.querySelector('.serviceRequests'), document.querySelector('.completedOrders')]

    buttons.forEach((button, index) => {
        button.addEventListener('click', () => {
            buttons.forEach((button) => {
                button.style.backgroundColor = 'rgba(50,50,50,0.1)'
            })
            sections.forEach((section) => {
                section.style.display = 'none'
            })
            sections[index].style.display = 'block'
            buttons[index].style.backgroundColor = 'rgba(50,150,200,0.3)'
        })
    })
    sections.forEach((section) => {
        section.style.display = 'none'
    })
    document.querySelector('.allOrders').style.display = 'block'
    document.getElementById('allOrdersButton').style.backgroundColor = 'rgba(50,150,200,0.3)'
</script>
